% Automatically generated by the DLog system.
% Budapest University of Technology and Economic (BUTE), 2007.
% User defined options: [allinone(yes), statistics(yes)] 
% Timestamp: 2008.2.27, 22:41:49 sec 

:- use_module(library(lists)).
:- use_module(dlog_hash).
% ************************
% Transformed TBox clauses
% ************************

% Predicate Good/1
'Good'(A) :-
	init_state(B),
	choice_Good(A, B).

choice_Good(A, B) :-
	(   nonvar(A)
	->  once_Good(A, B)
	;   setof(A, C^hasChild(A, C), D),
	    member(A, D),
	    once_Good(A, B)
	).

once_Good(A, C) :-
	hasChild(A, B),
	(   hasChild(B, D),
	    new_anc('Good'(A), C, E),
	    once_not_Patricide(D, E)
	->  true
	),
	once_Patricide(B, E), !.


% Predicate Patricide/1
'Patricide'(A) :-
	init_state(B),
	choice_Patricide(A, B).

choice_Patricide(A, B) :-
	(   nonvar(A)
	->  once_Patricide(A, B)
	;   setof(A, abox:'Patricide'(A), C),
	    member(A, C),
	    once_Patricide(A, B)
	).

once_Patricide(A, B) :-
	check_loop('Patricide'(A), B), !,
	dlog:count(loop),
	fail.
once_Patricide(A, _) :-
	abox:'Patricide'(A), !.
once_Patricide(D, A) :-
	not_Good(B, A),
	hasChild(B, C),
	hasChild(C, D),
	new_loop('Patricide'(D), A, E),
	once_Patricide(C, E), !.


% Predicate not_Patricide/1
not_Patricide(A) :-
	init_state(B),
	choice_not_Patricide(A, B).

choice_not_Patricide(A, B) :-
	(   nonvar(A)
	->  once_not_Patricide(A, B)
	;   setof(A, abox:not_Patricide(A), C),
	    member(A, C),
	    once_not_Patricide(A, B)
	).

once_not_Patricide(A, B) :-
	check_loop(not_Patricide(A), B), !,
	dlog:count(loop),
	fail.
once_not_Patricide(A, _) :-
	abox:not_Patricide(A), !.
once_not_Patricide(C, A) :-
	not_Good(B, A),
	hasChild(B, C),
	hasChild(C, D),
	new_loop(not_Patricide(C), A, E),
	once_not_Patricide(D, E), !.


% *************
% HI predicates
% *************

% Role hasChild/2 and its synonims
hasChild(A, B) :-
    abox:
    (   hasChild(A, B)
    ).

% Role inv_hasChild/2 and its synonims
inv_hasChild(A, B) :-
    abox:
    (   idx_hasChild(A, B)
    ).

% **************************
% Transformed Orphan clauses
% **************************

% Predicate not_Good
not_Good(A, B) :-
	check_anc('Good'(A), B),
	dlog:count(orphancres), !.

% ********************
% Auxiliary predicates
% ********************

dlog:init_statistics :-
	bb_put(loop, 0),
	bb_put(ancres, 0),
	bb_put(orphancres, 0),
	bb_put(solnum, 0).

dlog:count(A) :-
	bb_get(A, B),
	C is B+1,
	bb_put(A, C).

dlog:get_counts(A) :-
	bb_get(loop, B),
	bb_get(ancres, C),
	bb_get(orphancres, D),
	A=[loop=B, ancres=C, orphancres=D].

dlog:statistics_call(A, F) :-
	dlog:init_statistics,
	statistics(runtime, [E, _]),
	(   call(A),
	    bb_get(solnum, B),
	    C is B+1,
	    bb_put(solnum, C),
	    fail
	;   statistics(runtime, [D, _]),
	    H is D-E,
	    dlog:get_counts(I),
	    bb_get(solnum, G),
	    F=[solnum=G, runtime=H|I]
	).

:- dlog:init_statistics.

